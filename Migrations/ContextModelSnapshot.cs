// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using carpoolapp.Models;

namespace carpoolapp.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1");

            modelBuilder.Entity("carpoolapp.Models.Car", b =>
                {
                    b.Property<string>("LicensePlate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("INTEGER");

                    b.HasKey("LicensePlate");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            LicensePlate = "DA000PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ford Mondeo",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA001PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ford Focus",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA002PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ferrari",
                            NumberOfSeats = 2
                        },
                        new
                        {
                            LicensePlate = "DA003PA",
                            CarType = "Compact",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Renault Clio",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA004PA",
                            CarType = "Compact",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Toyota Yaris",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA005PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ford Mondeo",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA006PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ford Mondeo",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA007PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ford Mondeo",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA008PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ford Mondeo",
                            NumberOfSeats = 4
                        },
                        new
                        {
                            LicensePlate = "DA009PA",
                            CarType = "Limousine",
                            Color = "Metalic",
                            CurrentLocation = "Zagreb",
                            Name = "Ford Mondeo",
                            NumberOfSeats = 4
                        });
                });

            modelBuilder.Entity("carpoolapp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDriver")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Xenia",
                            IsDriver = true,
                            LastName = "Pass"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Angela",
                            IsDriver = false,
                            LastName = "Wolter"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Isis",
                            IsDriver = true,
                            LastName = "Booe"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Wendie",
                            IsDriver = true,
                            LastName = "Jacquet"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Dorene",
                            IsDriver = true,
                            LastName = "Rudnick"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Robby",
                            IsDriver = true,
                            LastName = "Nehls"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Mauricio",
                            IsDriver = true,
                            LastName = "Tung"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Keren",
                            IsDriver = true,
                            LastName = "Jacobo"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Micki",
                            IsDriver = false,
                            LastName = "Bustillos"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Kathey",
                            IsDriver = true,
                            LastName = "Hogue"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Darell",
                            IsDriver = true,
                            LastName = "Wetherby"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Dylan",
                            IsDriver = true,
                            LastName = "Kaczmarski"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Helen",
                            IsDriver = true,
                            LastName = "Marcello"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Tatum",
                            IsDriver = true,
                            LastName = "Branton"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Lakisha",
                            IsDriver = false,
                            LastName = "Julius"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Lionel",
                            IsDriver = false,
                            LastName = "Botelho"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "Shala",
                            IsDriver = true,
                            LastName = "Kimbrough"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Xenia",
                            IsDriver = false,
                            LastName = "Pass"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Tod",
                            IsDriver = false,
                            LastName = "Messineo"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Janis",
                            IsDriver = true,
                            LastName = "Kingery"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Perry",
                            IsDriver = true,
                            LastName = "HuberPass"
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Samantha",
                            IsDriver = true,
                            LastName = "Beauford"
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "Johnna",
                            IsDriver = true,
                            LastName = "Clem"
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Elfriede",
                            IsDriver = true,
                            LastName = "Mcbee"
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Elliott",
                            IsDriver = true,
                            LastName = "Pass"
                        },
                        new
                        {
                            Id = 26,
                            FirstName = "Annemarie",
                            IsDriver = true,
                            LastName = "Mook"
                        },
                        new
                        {
                            Id = 27,
                            FirstName = "Edwardo",
                            IsDriver = true,
                            LastName = "Broadwater"
                        });
                });

            modelBuilder.Entity("carpoolapp.Models.Travel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarLicensePlate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CarLicensePlate");

                    b.ToTable("Travels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CarLicensePlate = "DA000PA",
                            EndDate = new DateTime(2019, 11, 23, 18, 58, 1, 550, DateTimeKind.Local).AddTicks(6966),
                            EndLocation = "Pula",
                            StartDate = new DateTime(2019, 11, 23, 14, 58, 1, 547, DateTimeKind.Local).AddTicks(2160),
                            StartLocation = "Zagreb"
                        });
                });

            modelBuilder.Entity("carpoolapp.Models.TravelEmployees", b =>
                {
                    b.Property<int>("TravelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TravelId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TravelEmployees");

                    b.HasData(
                        new
                        {
                            TravelId = 1,
                            EmployeeId = 1
                        },
                        new
                        {
                            TravelId = 1,
                            EmployeeId = 2
                        },
                        new
                        {
                            TravelId = 1,
                            EmployeeId = 3
                        },
                        new
                        {
                            TravelId = 1,
                            EmployeeId = 4
                        });
                });

            modelBuilder.Entity("carpoolapp.Models.Travel", b =>
                {
                    b.HasOne("carpoolapp.Models.Car", "Car")
                        .WithMany("Travels")
                        .HasForeignKey("CarLicensePlate");
                });

            modelBuilder.Entity("carpoolapp.Models.TravelEmployees", b =>
                {
                    b.HasOne("carpoolapp.Models.Employee", "Employee")
                        .WithMany("TravelEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carpoolapp.Models.Travel", "Travel")
                        .WithMany("TravelEmployees")
                        .HasForeignKey("TravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
